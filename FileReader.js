const fs = require('fs')
const path = require('path')
const yaml = require('js-yaml')

const readAllFiles = (directoryPath,func, filesPaths = []) => {
    for (const fileName of fs.readdirSync(directoryPath)) {
        const filePath = path.join(directoryPath, fileName);
        const fileStat = fs.statSync(filePath);
        if (fileStat.isDirectory()) {
            readAllFiles(filePath, func, filesPaths);
        } else{
            func(filePath,filePath.split(".").at(-1))
        }
    }

}


const schemaa = new yaml.Schema([
    new yaml.Type('!type:StartPlacementActionEvent', { kind: 'mapping', construct: function (data) { return { type: 'StartPlacementActionEvent', ...data } } }),
    new yaml.Type('!type:InstantAction', { kind: 'mapping', construct: function (data) { return { type: 'InstantAction', ...data } } }),
    new yaml.Type('!type:PlaceDecalActionEvent', { kind: 'mapping', construct: function (data) { return { type: 'PlaceDecalActionEvent', ...data } } }),
    new yaml.Type('!type:WorldTargetAction', { kind: 'mapping', construct: function (data) { return { type: 'WorldTargetAction', ...data } } }),
    new yaml.Type('!type:SoundPathSpecifier', { kind: 'mapping', construct: function (data) { return { type: 'SoundPathSpecifier', ...data } } }),
    new yaml.Type('!type:ToggleActionEvent', { kind: 'mapping', construct: function (data) { return { type: 'ToggleActionEvent', ...data } } }),
    new yaml.Type('!type:ContainerSlot', { kind: 'mapping', construct: function (data) { return { type: 'ContainerSlot', ...data } } }),
    new yaml.Type('!type:Container', { kind: 'mapping', construct: function (data) { return { type: 'Container', ...data } } }),
    new yaml.Type('!type:PolygonShape', { kind: 'mapping', construct: function (data) { return { type: 'PolygonShape', ...data } } }),
    new yaml.Type('!type:PhysShapeCircle', { kind: 'mapping', construct: function (data) { return { type: 'PhysShapeCircle', ...data } } }),
    new yaml.Type('!type:WeldJoint', { kind: 'mapping', construct: function (data) { return { type: 'WeldJoint', ...data } } }),
    new yaml.Type('!type:ScreamActionEvent', { kind: 'mapping', construct: function (data) { return { type: 'ScreamActionEvent', ...data } } }),
    new yaml.Type('!type:DamageTrigger', { kind: 'mapping', construct: function (data) { return { type: 'DamageTrigger', ...data } } }),
    new yaml.Type('!type:DoActsBehavior', { kind: 'mapping', construct: function (data) { return { type: 'DoActsBehavior', ...data } } }),
    new yaml.Type('!type:SoundCollectionSpecifier', { kind: 'mapping', construct: function (data) { return { type: 'SoundCollectionSpecifier', ...data } } }),
    new yaml.Type('!type:PlaySoundBehavior', { kind: 'mapping', construct: function (data) { return { type: 'PlaySoundBehavior', ...data } } }),
    new yaml.Type('!type:SpawnEntitiesBehavior', { kind: 'mapping', construct: function (data) { return { type: 'SpawnEntitiesBehavior', ...data } } }),
    new yaml.Type('!type:BiomeEntityLayer', { kind: 'mapping', construct: function (data) { return { type: 'BiomeEntityLayer', ...data } } }),
    new yaml.Type('!type:BiomeTileLayer', { kind: 'mapping', construct: function (data) { return { type: 'BiomeTileLayer', ...data } } }),
    new yaml.Type('!type:BiomeDecalLayer', { kind: 'mapping', construct: function (data) { return { type: 'BiomeDecalLayer', ...data } } }),
    new yaml.Type('!type:ChineseNewYear', { kind: 'mapping', construct: function (data) { return { type: 'ChineseNewYear', ...data } } }),
    new yaml.Type('!type:Computus', { kind: 'mapping', construct: function (data) { return { type: 'Computus', ...data } } }),
    new yaml.Type('!type:Custom', { kind: 'mapping', construct: function (data) { return { type: 'Custom', ...data } } }),
    new yaml.Type('!type:WeekdayInMonth', { kind: 'mapping', construct: function (data) { return { type: 'WeekdayInMonth', ...data } } }),
    new yaml.Type('!type:DayOfYear', { kind: 'mapping', construct: function (data) { return { type: 'DayOfYear', ...data } } }),
    new yaml.Type('!type:FridayThirteenth', { kind: 'mapping', construct: function (data) { return { type: 'FridayThirteenth', ...data } } }),
    new yaml.Type('!type:MechToggleEquipmentEvent', { kind: 'mapping', construct: function (data) { return { type: 'MechToggleEquipmentEvent', ...data } } }),
    new yaml.Type('!type:MechOpenUiEvent', { kind: 'mapping', construct: function (data) { return { type: 'MechOpenUiEvent', ...data } } }),
    new yaml.Type('!type:MechEjectPilotEvent', { kind: 'mapping', construct: function (data) { return { type: 'MechEjectPilotEvent', ...data } } }),
    new yaml.Type('!type:SpiderWebActionEvent', { kind: 'mapping', construct: function (data) { return { type: 'SpiderWebActionEvent', ...data } } }),
    new yaml.Type('!type:RevenantShopActionEvent', { kind: 'mapping', construct: function (data) { return { type: 'RevenantShopActionEvent', ...data } } }),
    new yaml.Type('!type:RevenantDefileActionEvent', { kind: 'mapping', construct: function (data) { return { type: 'RevenantDefileActionEvent', ...data } } }),
    new yaml.Type('!type:RevenantOverloadLightsActionEvent', { kind: 'mapping', construct: function (data) { return { type: 'RevenantOverloadLightsActionEvent', ...data } } }),
    new yaml.Type('!type:RevenantBlightActionEvent', { kind: 'mapping', construct: function (data) { return { type: 'RevenantBlightActionEvent', ...data } } }),
    new yaml.Type('!type:RevenantMalfunctionActionEvent', { kind: 'mapping', construct: function (data) { return { type: 'RevenantMalfunctionActionEvent', ...data } } }),
    new yaml.Type('!type:ZombifySelfActionEvent', { kind: 'mapping', construct: function (data) { return { type: 'ZombifySelfActionEvent', ...data } } }),
    new yaml.Type('!type:OpenStorageImplantEvent', { kind: 'mapping', construct: function (data) { return { type: 'OpenStorageImplantEvent', ...data } } }),
    new yaml.Type('!type:ActivateImplantEvent', { kind: 'mapping', construct: function (data) { return { type: 'ActivateImplantEvent', ...data } } }),
    new yaml.Type('!type:UseFreedomImplantEvent', { kind: 'mapping', construct: function (data) { return { type: 'UseFreedomImplantEvent', ...data } } }),
    new yaml.Type('!type:ToggleClothingEvent', { kind: 'mapping', construct: function (data) { return { type: 'ToggleClothingEvent', ...data } } }),
    new yaml.Type('!type:ToggleCombatActionEvent', { kind: 'mapping', construct: function (data) { return { type: 'ToggleCombatActionEvent', ...data } } }),
    new yaml.Type('!type:VoiceMaskSetNameEvent', { kind: 'mapping', construct: function (data) { return { type: 'VoiceMaskSetNameEvent', ...data } } }),
    new yaml.Type('!type:VendingMachineSelfDispenseEvent', { kind: 'mapping', construct: function (data) { return { type: 'VendingMachineSelfDispenseEvent', ...data } } }),
    new yaml.Type('!type:ArtifactSelfActivateEvent', { kind: 'mapping', construct: function (data) { return { type: 'ArtifactSelfActivateEvent', ...data } } }),
    new yaml.Type('!type:ClearAllOverlaysEvent', { kind: 'mapping', construct: function (data) { return { type: 'ClearAllOverlaysEvent', ...data } } }),
    new yaml.Type('!type:EggLayInstantActionEvent', { kind: 'mapping', construct: function (data) { return { type: 'EggLayInstantActionEvent', ...data } } }),
    new yaml.Type('!type:SleepActionEvent', { kind: 'mapping', construct: function (data) { return { type: 'SleepActionEvent', ...data } } }),
    new yaml.Type('!type:WakeActionEvent', { kind: 'mapping', construct: function (data) { return { type: 'WakeActionEvent', ...data } } }),
    new yaml.Type('!type:ResistFire', { kind: 'mapping', construct: function (data) { return { type: 'ResistFire', ...data } } }),
    new yaml.Type('!type:RemoveCuffs', { kind: 'mapping', construct: function (data) { return { type: 'RemoveCuffs', ...data } } }),
    new yaml.Type('!type:RemoveEnsnare', { kind: 'mapping', construct: function (data) { return { type: 'RemoveEnsnare', ...data } } }),
    new yaml.Type('!type:Unbuckle', { kind: 'mapping', construct: function (data) { return { type: 'Unbuckle', ...data } } }),
    new yaml.Type('!type:ToggleInternals', { kind: 'mapping', construct: function (data) { return { type: 'ToggleInternals', ...data } } }),
    new yaml.Type('!type:StopPiloting', { kind: 'mapping', construct: function (data) { return { type: 'StopPiloting', ...data } } }),
    new yaml.Type('!type:BreakVow', { kind: 'mapping', construct: function (data) { return { type: 'BreakVow', ...data } } }),
    new yaml.Type('!type:RetakeVow', { kind: 'mapping', construct: function (data) { return { type: 'RetakeVow', ...data } } }),
    new yaml.Type('!type:StopBeingPulled', { kind: 'mapping', construct: function (data) { return { type: 'StopBeingPulled', ...data } } }),
    new yaml.Type('!type:StopPulling', { kind: 'mapping', construct: function (data) { return { type: 'StopPulling', ...data } } }),
    new yaml.Type('!type:AlarmThresholdSetting', { kind: 'mapping', construct: function (data) { return { type: 'AlarmThresholdSetting', ...data } } }),
    new yaml.Type('!type:PlasmaFireReaction', { kind: 'mapping', construct: function (data) { return { type: 'PlasmaFireReaction', ...data } } }),
    new yaml.Type('!type:TritiumFireReaction', { kind: 'mapping', construct: function (data) { return { type: 'TritiumFireReaction', ...data } } }),
    new yaml.Type('!type:FrezonCoolantReaction', { kind: 'mapping', construct: function (data) { return { type: 'FrezonCoolantReaction', ...data } } }),
    new yaml.Type('!type:FrezonProductionReaction', { kind: 'mapping', construct: function (data) { return { type: 'FrezonProductionReaction', ...data } } }),
    new yaml.Type('!type:MiasmicSubsumationReaction', { kind: 'mapping', construct: function (data) { return { type: 'MiasmicSubsumationReaction', ...data } } }),
    new yaml.Type('!type:ListingLimitedStockCondition', { kind: 'mapping', construct: function (data) { return { type: 'ListingLimitedStockCondition', ...data } } }),
    new yaml.Type('!type:BuyerWhitelistCondition', { kind: 'mapping', construct: function (data) { return { type: 'BuyerWhitelistCondition', ...data } } }),
    new yaml.Type('!type:StoreWhitelistCondition', { kind: 'mapping', construct: function (data) { return { type: 'StoreWhitelistCondition', ...data } } }),
    new yaml.Type('!type:BuyerJobCondition', { kind: 'mapping', construct: function (data) { return { type: 'BuyerJobCondition', ...data } } }),
    new yaml.Type('!type:DiseaseAdjustReagent', { kind: 'mapping', construct: function (data) { return { type: 'DiseaseAdjustReagent', ...data } } }),
    new yaml.Type('!type:DiseasePopUp', { kind: 'mapping', construct: function (data) { return { type: 'DiseasePopUp', ...data } } }),
    new yaml.Type('!type:DiseaseSnough', { kind: 'mapping', construct: function (data) { return { type: 'DiseaseSnough', ...data } } }),
    new yaml.Type('!type:DiseaseBedrestCure', { kind: 'mapping', construct: function (data) { return { type: 'DiseaseBedrestCure', ...data } } }),
    new yaml.Type('!type:DiseaseJustWaitCure', { kind: 'mapping', construct: function (data) { return { type: 'DiseaseJustWaitCure', ...data } } }),
    new yaml.Type('!type:DiseaseReagentCure', { kind: 'mapping', construct: function (data) { return { type: 'DiseaseReagentCure', ...data } } }),
    new yaml.Type('!type:DiseaseHealthChange', { kind: 'mapping', construct: function (data) { return { type: 'DiseaseHealthChange', ...data } } }),
    new yaml.Type('!type:DiseaseVomit', { kind: 'mapping', construct: function (data) { return { type: 'DiseaseVomit', ...data } } }),
    new yaml.Type('!type:DiseaseGenericStatusEffect', { kind: 'mapping', construct: function (data) { return { type: 'DiseaseGenericStatusEffect', ...data } } }),
    new yaml.Type('!type:DiseasePolymorph', { kind: 'mapping', construct: function (data) { return { type: 'DiseasePolymorph', ...data } } }),
    new yaml.Type('!type:DiseaseBodyTemperatureCure', { kind: 'mapping', construct: function (data) { return { type: 'DiseaseBodyTemperatureCure', ...data } } }),
    new yaml.Type('!type:DiseaseAddComponent', { kind: 'mapping', construct: function (data) { return { type: 'DiseaseAddComponent', ...data } } }),
    new yaml.Type('!type:StationEventRuleConfiguration', { kind: 'mapping', construct: function (data) { return { type: 'StationEventRuleConfiguration', ...data } } }),
    new yaml.Type('!type:SolarFlareEventRuleConfiguration', { kind: 'mapping', construct: function (data) { return { type: 'SolarFlareEventRuleConfiguration', ...data } } }),
    new yaml.Type('!type:GenericGameRuleConfiguration', { kind: 'mapping', construct: function (data) { return { type: 'GenericGameRuleConfiguration', ...data } } }),
    new yaml.Type('!type:InactivityGameRuleConfiguration', { kind: 'mapping', construct: function (data) { return { type: 'InactivityGameRuleConfiguration', ...data } } }),
    new yaml.Type('!type:MaxTimeRestartRuleConfiguration', { kind: 'mapping', construct: function (data) { return { type: 'MaxTimeRestartRuleConfiguration', ...data } } }),
    new yaml.Type('!type:NukeopsRuleConfiguration', { kind: 'mapping', construct: function (data) { return { type: 'NukeopsRuleConfiguration', ...data } } }),
    new yaml.Type('!type:KnockSpellEvent', { kind: 'mapping', construct: function (data) { return { type: 'KnockSpellEvent', ...data } } }),
    new yaml.Type('!type:TargetInFront', { kind: 'mapping', construct: function (data) { return { type: 'TargetInFront', ...data } } }),
    new yaml.Type('!type:InstantSpawnSpellEvent', { kind: 'mapping', construct: function (data) { return { type: 'InstantSpawnSpellEvent', ...data } } }),
    new yaml.Type('!type:TargetCasterPos', { kind: 'mapping', construct: function (data) { return { type: 'TargetCasterPos', ...data } } }),
    new yaml.Type('!type:ProjectileSpellEvent', { kind: 'mapping', construct: function (data) { return { type: 'ProjectileSpellEvent', ...data } } }),
    new yaml.Type('!type:WorldSpawnSpellEvent', { kind: 'mapping', construct: function (data) { return { type: 'WorldSpawnSpellEvent', ...data } } }),
    new yaml.Type('!type:SmiteSpellEvent', { kind: 'mapping', construct: function (data) { return { type: 'SmiteSpellEvent', ...data } } }),
    new yaml.Type('!type:ChangeComponentsSpellEvent', { kind: 'mapping', construct: function (data) { return { type: 'ChangeComponentsSpellEvent', ...data } } }),
    new yaml.Type('!type:TeleportSpellEvent', { kind: 'mapping', construct: function (data) { return { type: 'TeleportSpellEvent', ...data } } }),
    new yaml.Type('!type:NanotrasenNameGenerator', { kind: 'mapping', construct: function (data) { return { type: 'NanotrasenNameGenerator', ...data } } }),
    new yaml.Type('!type:KeyExistsPrecondition', { kind: 'mapping', construct: function (data) { return { type: 'KeyExistsPrecondition', ...data } } }),
    new yaml.Type('!type:PickRangedTargetOperator', { kind: 'mapping', construct: function (data) { return { type: 'PickRangedTargetOperator', ...data } } }),
    new yaml.Type('!type:RangedOperator', { kind: 'mapping', construct: function (data) { return { type: 'RangedOperator', ...data } } }),
    new yaml.Type('!type:TargetInRangePrecondition', { kind: 'mapping', construct: function (data) { return { type: 'TargetInRangePrecondition', ...data } } }),
    new yaml.Type('!type:TargetInLOSPrecondition', { kind: 'mapping', construct: function (data) { return { type: 'TargetInLOSPrecondition', ...data } } }),
    new yaml.Type('!type:PickMeleeTargetOperator', { kind: 'mapping', construct: function (data) { return { type: 'PickMeleeTargetOperator', ...data } } }),
    new yaml.Type('!type:MeleeOperator', { kind: 'mapping', construct: function (data) { return { type: 'MeleeOperator', ...data } } }),
    new yaml.Type('!type:MoveToOperator', { kind: 'mapping', construct: function (data) { return { type: 'MoveToOperator', ...data } } }),
    new yaml.Type('!type:PickAccessibleComponentOperator', { kind: 'mapping', construct: function (data) { return { type: 'PickAccessibleComponentOperator', ...data } } }),
    new yaml.Type('!type:SetFloatOperator', { kind: 'mapping', construct: function (data) { return { type: 'SetFloatOperator', ...data } } }),
    new yaml.Type('!type:WaitOperator', { kind: 'mapping', construct: function (data) { return { type: 'WaitOperator', ...data } } }),
    new yaml.Type('!type:CoordinatesInRangePrecondition', { kind: 'mapping', construct: function (data) { return { type: 'CoordinatesInRangePrecondition', ...data } } }),
    new yaml.Type('!type:PickAccessibleOperator', { kind: 'mapping', construct: function (data) { return { type: 'PickAccessibleOperator', ...data } } }),
    new yaml.Type('!type:CoordinatesNotInRangePrecondition', { kind: 'mapping', construct: function (data) { return { type: 'CoordinatesNotInRangePrecondition', ...data } } }),
    new yaml.Type('!type:BuckledPrecondition', { kind: 'mapping', construct: function (data) { return { type: 'BuckledPrecondition', ...data } } }),
    new yaml.Type('!type:PulledPrecondition', { kind: 'mapping', construct: function (data) { return { type: 'PulledPrecondition', ...data } } }),
    new yaml.Type('!type:PickRandomRotationOperator', { kind: 'mapping', construct: function (data) { return { type: 'PickRandomRotationOperator', ...data } } }),
    new yaml.Type('!type:RotateToTargetOperator', { kind: 'mapping', construct: function (data) { return { type: 'RotateToTargetOperator', ...data } } }),
    new yaml.Type('!type:RandomOperator', { kind: 'mapping', construct: function (data) { return { type: 'RandomOperator', ...data } } }),
    new yaml.Type('!type:PickPathfindPointOperator', { kind: 'mapping', construct: function (data) { return { type: 'PickPathfindPointOperator', ...data } } }),
    new yaml.Type('!type:SpeakOperator', { kind: 'mapping', construct: function (data) { return { type: 'SpeakOperator', ...data } } }),
    new yaml.Type('!type:PickNearbyInjectableOperator', { kind: 'mapping', construct: function (data) { return { type: 'PickNearbyInjectableOperator', ...data } } }),
    new yaml.Type('!type:MedibotInjectOperator', { kind: 'mapping', construct: function (data) { return { type: 'MedibotInjectOperator', ...data } } }),
    new yaml.Type('!type:TraitorRequirement', { kind: 'mapping', construct: function (data) { return { type: 'TraitorRequirement', ...data } } }),
    new yaml.Type('!type:IncompatibleConditionsRequirement', { kind: 'mapping', construct: function (data) { return { type: 'IncompatibleConditionsRequirement', ...data } } }),
    new yaml.Type('!type:NotRoleRequirement', { kind: 'mapping', construct: function (data) { return { type: 'NotRoleRequirement', ...data } } }),
    new yaml.Type('!type:StealCondition', { kind: 'mapping', construct: function (data) { return { type: 'StealCondition', ...data } } }),
    new yaml.Type('!type:KillRandomPersonCondition', { kind: 'mapping', construct: function (data) { return { type: 'KillRandomPersonCondition', ...data } } }),
    new yaml.Type('!type:MultipleTraitorsRequirement', { kind: 'mapping', construct: function (data) { return { type: 'MultipleTraitorsRequirement', ...data } } }),
    new yaml.Type('!type:RandomTraitorAliveCondition', { kind: 'mapping', construct: function (data) { return { type: 'RandomTraitorAliveCondition', ...data } } }),
    new yaml.Type('!type:DieCondition', { kind: 'mapping', construct: function (data) { return { type: 'DieCondition', ...data } } }),
    new yaml.Type('!type:EscapeShuttleCondition', { kind: 'mapping', construct: function (data) { return { type: 'EscapeShuttleCondition', ...data } } }),
    new yaml.Type('!type:RandomTraitorProgressCondition', { kind: 'mapping', construct: function (data) { return { type: 'RandomTraitorProgressCondition', ...data } } }),
    new yaml.Type('!type:ImageParallaxTextureSource', { kind: 'mapping', construct: function (data) { return { type: 'ImageParallaxTextureSource', ...data } } }),
    new yaml.Type('!type:GeneratedParallaxTextureSource', { kind: 'mapping', construct: function (data) { return { type: 'GeneratedParallaxTextureSource', ...data } } }),
    new yaml.Type('!type:SatiateThirst', { kind: 'mapping', construct: function (data) { return { type: 'SatiateThirst', ...data } } }),
    new yaml.Type('!type:PlantAdjustWater', { kind: 'mapping', construct: function (data) { return { type: 'PlantAdjustWater', ...data } } }),
    new yaml.Type('!type:SatiateHunger', { kind: 'mapping', construct: function (data) { return { type: 'SatiateHunger', ...data } } }),
    new yaml.Type('!type:HealthChange', { kind: 'mapping', construct: function (data) { return { type: 'HealthChange', ...data } } }),
    new yaml.Type('!type:ChemCleanBloodstream', { kind: 'mapping', construct: function (data) { return { type: 'ChemCleanBloodstream', ...data } } }),
    new yaml.Type('!type:PlantAdjustNutrition', { kind: 'mapping', construct: function (data) { return { type: 'PlantAdjustNutrition', ...data } } }),
    new yaml.Type('!type:OrganType', { kind: 'mapping', construct: function (data) { return { type: 'OrganType', ...data } } }),
    new yaml.Type('!type:PlantAdjustHealth', { kind: 'mapping', construct: function (data) { return { type: 'PlantAdjustHealth', ...data } } }),
    new yaml.Type('!type:PlantAdjustMutationMod', { kind: 'mapping', construct: function (data) { return { type: 'PlantAdjustMutationMod', ...data } } }),
    new yaml.Type('!type:PlantAdjustToxins', { kind: 'mapping', construct: function (data) { return { type: 'PlantAdjustToxins', ...data } } }),
    new yaml.Type('!type:PlantAdjustPests', { kind: 'mapping', construct: function (data) { return { type: 'PlantAdjustPests', ...data } } }),
    new yaml.Type('!type:PlantAdjustWeeds', { kind: 'mapping', construct: function (data) { return { type: 'PlantAdjustWeeds', ...data } } }),
    new yaml.Type('!type:RobustHarvest', { kind: 'mapping', construct: function (data) { return { type: 'RobustHarvest', ...data } } }),
    new yaml.Type('!type:PlantAffectGrowth', { kind: 'mapping', construct: function (data) { return { type: 'PlantAffectGrowth', ...data } } }),
    new yaml.Type('!type:PlantDiethylamine', { kind: 'mapping', construct: function (data) { return { type: 'PlantDiethylamine', ...data } } }),
    new yaml.Type('!type:PopupMessage', { kind: 'mapping', construct: function (data) { return { type: 'PopupMessage', ...data } } }),
    new yaml.Type('!type:CleanTileReaction', { kind: 'mapping', construct: function (data) { return { type: 'CleanTileReaction', ...data } } }),
    new yaml.Type('!type:SpillTileReaction', { kind: 'mapping', construct: function (data) { return { type: 'SpillTileReaction', ...data } } }),
    new yaml.Type('!type:ModifyBloodLevel', { kind: 'mapping', construct: function (data) { return { type: 'ModifyBloodLevel', ...data } } }),
    new yaml.Type('!type:PlantAdjustMutationLevel', { kind: 'mapping', construct: function (data) { return { type: 'PlantAdjustMutationLevel', ...data } } }),
    new yaml.Type('!type:Oxygenate', { kind: 'mapping', construct: function (data) { return { type: 'Oxygenate', ...data } } }),
    new yaml.Type('!type:ModifyLungGas', { kind: 'mapping', construct: function (data) { return { type: 'ModifyLungGas', ...data } } }),
    new yaml.Type('!type:FlammableTileReaction', { kind: 'mapping', construct: function (data) { return { type: 'FlammableTileReaction', ...data } } }),
    new yaml.Type('!type:AdjustReagent', { kind: 'mapping', construct: function (data) { return { type: 'AdjustReagent', ...data } } }),
    new yaml.Type('!type:FlammableReaction', { kind: 'mapping', construct: function (data) { return { type: 'FlammableReaction', ...data } } }),
    new yaml.Type('!type:ReagentThreshold', { kind: 'mapping', construct: function (data) { return { type: 'ReagentThreshold', ...data } } }),
    new yaml.Type('!type:ChemMiasmaPoolSource', { kind: 'mapping', construct: function (data) { return { type: 'ChemMiasmaPoolSource', ...data } } }),
    new yaml.Type('!type:ChemVomit', { kind: 'mapping', construct: function (data) { return { type: 'ChemVomit', ...data } } }),
    new yaml.Type('!type:MovespeedModifier', { kind: 'mapping', construct: function (data) { return { type: 'MovespeedModifier', ...data } } }),
    new yaml.Type('!type:GenericStatusEffect', { kind: 'mapping', construct: function (data) { return { type: 'GenericStatusEffect', ...data } } }),
    new yaml.Type('!type:Drunk', { kind: 'mapping', construct: function (data) { return { type: 'Drunk', ...data } } }),
    new yaml.Type('!type:CreateEntityTileReaction', { kind: 'mapping', construct: function (data) { return { type: 'CreateEntityTileReaction', ...data } } }),
    new yaml.Type('!type:HasTag', { kind: 'mapping', construct: function (data) { return { type: 'HasTag', ...data } } }),
    new yaml.Type('!type:Electrocute', { kind: 'mapping', construct: function (data) { return { type: 'Electrocute', ...data } } }),
    new yaml.Type('!type:Jitter', { kind: 'mapping', construct: function (data) { return { type: 'Jitter', ...data } } }),
    new yaml.Type('!type:PlantCryoxadone', { kind: 'mapping', construct: function (data) { return { type: 'PlantCryoxadone', ...data } } }),
    new yaml.Type('!type:Temperature', { kind: 'mapping', construct: function (data) { return { type: 'Temperature', ...data } } }),
    new yaml.Type('!type:MobStateCondition', { kind: 'mapping', construct: function (data) { return { type: 'MobStateCondition', ...data } } }),
    new yaml.Type('!type:TotalDamage', { kind: 'mapping', construct: function (data) { return { type: 'TotalDamage', ...data } } }),
    new yaml.Type('!type:ModifyBleedAmount', { kind: 'mapping', construct: function (data) { return { type: 'ModifyBleedAmount', ...data } } }),
    new yaml.Type('!type:AdjustTemperature', { kind: 'mapping', construct: function (data) { return { type: 'AdjustTemperature', ...data } } }),
    new yaml.Type('!type:Emote', { kind: 'mapping', construct: function (data) { return { type: 'Emote', ...data } } }),
    new yaml.Type('!type:ChemCureDisease', { kind: 'mapping', construct: function (data) { return { type: 'ChemCureDisease', ...data } } }),
    new yaml.Type('!type:ChemHealEyeDamage', { kind: 'mapping', construct: function (data) { return { type: 'ChemHealEyeDamage', ...data } } }),
    new yaml.Type('!type:MakeSentient', { kind: 'mapping', construct: function (data) { return { type: 'MakeSentient', ...data } } }),
    new yaml.Type('!type:ResetNarcolepsy', { kind: 'mapping', construct: function (data) { return { type: 'ResetNarcolepsy', ...data } } }),
    new yaml.Type('!type:Ignite', { kind: 'mapping', construct: function (data) { return { type: 'Ignite', ...data } } }),
    new yaml.Type('!type:PryTileReaction', { kind: 'mapping', construct: function (data) { return { type: 'PryTileReaction', ...data } } }),
    new yaml.Type('!type:ChemCauseRandomDisease', { kind: 'mapping', construct: function (data) { return { type: 'ChemCauseRandomDisease', ...data } } }),
    new yaml.Type('!type:ChemCauseDisease', { kind: 'mapping', construct: function (data) { return { type: 'ChemCauseDisease', ...data } } }),
    new yaml.Type('!type:CableDeviceNode', { kind: 'mapping', construct: function (data) { return { type: 'CableDeviceNode', ...data } } }),
    new yaml.Type('!type:ActivateArtifact', { kind: 'mapping', construct: function (data) { return { type: 'ActivateArtifact', ...data } } }),
    new yaml.Type('!type:PowerWireAction', { kind: 'mapping', construct: function (data) { return { type: 'PowerWireAction', ...data } } }),
    new yaml.Type('!type:DoorBoltWireAction', { kind: 'mapping', construct: function (data) { return { type: 'DoorBoltWireAction', ...data } } }),
    new yaml.Type('!type:DoorBoltLightWireAction', { kind: 'mapping', construct: function (data) { return { type: 'DoorBoltLightWireAction', ...data } } }),
    new yaml.Type('!type:DoorTimingWireAction', { kind: 'mapping', construct: function (data) { return { type: 'DoorTimingWireAction', ...data } } }),
    new yaml.Type('!type:DoorSafetyWireAction', { kind: 'mapping', construct: function (data) { return { type: 'DoorSafetyWireAction', ...data } } }),
    new yaml.Type('!type:AccessWireAction', { kind: 'mapping', construct: function (data) { return { type: 'AccessWireAction', ...data } } }),
    new yaml.Type('!type:VendingMachineContrabandWireAction', { kind: 'mapping', construct: function (data) { return { type: 'VendingMachineContrabandWireAction', ...data } } }),
    new yaml.Type('!type:VendingMachineEjectItemWireAction', { kind: 'mapping', construct: function (data) { return { type: 'VendingMachineEjectItemWireAction', ...data } } }),
    new yaml.Type('!type:AirAlarmPanicWire', { kind: 'mapping', construct: function (data) { return { type: 'AirAlarmPanicWire', ...data } } }),
    new yaml.Type('!type:AtmosMonitorDeviceNetWire', { kind: 'mapping', construct: function (data) { return { type: 'AtmosMonitorDeviceNetWire', ...data } } }),
    new yaml.Type('!type:ArcadeOverflowWireAction', { kind: 'mapping', construct: function (data) { return { type: 'ArcadeOverflowWireAction', ...data } } }),
    new yaml.Type('!type:ArcadePlayerInvincibleWireAction', { kind: 'mapping', construct: function (data) { return { type: 'ArcadePlayerInvincibleWireAction', ...data } } }),
    new yaml.Type('!type:ArcadeEnemyInvincibleWireAction', { kind: 'mapping', construct: function (data) { return { type: 'ArcadeEnemyInvincibleWireAction', ...data } } }),
    new yaml.Type('!type:CryoPodEjectLockWireAction', { kind: 'mapping', construct: function (data) { return { type: 'CryoPodEjectLockWireAction', ...data } } }),
    new yaml.Type('!type:PhysShapeAabb', { kind: 'mapping', construct: function (data) { return { type: 'PhysShapeAabb', ...data } } }),
    new yaml.Type('!type:ElectrocutionNode', { kind: 'mapping', construct: function (data) { return { type: 'ElectrocutionNode', ...data } } }),
    new yaml.Type('!type:ChangeConstructionNodeBehavior', { kind: 'mapping', construct: function (data) { return { type: 'ChangeConstructionNodeBehavior', ...data } } }),
    new yaml.Type('!type:AddToSolutionReaction', { kind: 'mapping', construct: function (data) { return { type: 'AddToSolutionReaction', ...data } } }),
    new yaml.Type('!type:TileNotBlocked', { kind: 'mapping', construct: function (data) { return { type: 'TileNotBlocked', ...data } } }),
    new yaml.Type('!type:WallmountCondition', { kind: 'mapping', construct: function (data) { return { type: 'WallmountCondition', ...data } } }),
    new yaml.Type('!type:TileType', { kind: 'mapping', construct: function (data) { return { type: 'TileType', ...data } } }),
    new yaml.Type('!type:EmptyOrWindowValidInTile', { kind: 'mapping', construct: function (data) { return { type: 'EmptyOrWindowValidInTile', ...data } } }),
    new yaml.Type('!type:NoWindowsInTile', { kind: 'mapping', construct: function (data) { return { type: 'NoWindowsInTile', ...data } } }),
    new yaml.Type('!type:ExplosionReactionEffect', { kind: 'mapping', construct: function (data) { return { type: 'ExplosionReactionEffect', ...data } } }),
    new yaml.Type('!type:SmokeAreaReactionEffect', { kind: 'mapping', construct: function (data) { return { type: 'SmokeAreaReactionEffect', ...data } } }),
    new yaml.Type('!type:FoamAreaReactionEffect', { kind: 'mapping', construct: function (data) { return { type: 'FoamAreaReactionEffect', ...data } } }),
    new yaml.Type('!type:CreateEntityReactionEffect', { kind: 'mapping', construct: function (data) { return { type: 'CreateEntityReactionEffect', ...data } } }),
    new yaml.Type('!type:CreateGas', { kind: 'mapping', construct: function (data) { return { type: 'CreateGas', ...data } } }),
    new yaml.Type('!type:ToggleMaskEvent', { kind: 'mapping', construct: function (data) { return { type: 'ToggleMaskEvent', ...data } } }),
    new yaml.Type('!type:FadeBehaviour', { kind: 'mapping', construct: function (data) { return { type: 'FadeBehaviour', ...data } } }),
    new yaml.Type('!type:PulseBehaviour', { kind: 'mapping', construct: function (data) { return { type: 'PulseBehaviour', ...data } } }),
    new yaml.Type('!type:ToggleIntrinsicUIEvent', { kind: 'mapping', construct: function (data) { return { type: 'ToggleIntrinsicUIEvent', ...data } } }),
    new yaml.Type('!type:DragonDevourActionEvent', { kind: 'mapping', construct: function (data) { return { type: 'DragonDevourActionEvent', ...data } } }),
    new yaml.Type('!type:DragonSpawnRiftActionEvent', { kind: 'mapping', construct: function (data) { return { type: 'DragonSpawnRiftActionEvent', ...data } } }),
    new yaml.Type('!type:ExplodeBehavior', { kind: 'mapping', construct: function (data) { return { type: 'ExplodeBehavior', ...data } } }),
    new yaml.Type('!type:RatKingRaiseArmyActionEvent', { kind: 'mapping', construct: function (data) { return { type: 'RatKingRaiseArmyActionEvent', ...data } } }),
    new yaml.Type('!type:RatKingDomainActionEvent', { kind: 'mapping', construct: function (data) { return { type: 'RatKingDomainActionEvent', ...data } } }),
    new yaml.Type('!type:DamageTypeTrigger', { kind: 'mapping', construct: function (data) { return { type: 'DamageTypeTrigger', ...data } } }),
    new yaml.Type('!type:GibBehavior', { kind: 'mapping', construct: function (data) { return { type: 'GibBehavior', ...data } } }),
    new yaml.Type('!type:WashCreamPieReaction', { kind: 'mapping', construct: function (data) { return { type: 'WashCreamPieReaction', ...data } } }),
    new yaml.Type('!type:NotekeeperUi', { kind: 'mapping', construct: function (data) { return { type: 'NotekeeperUi', ...data } } }),
    new yaml.Type('!type:NetProbeUi', { kind: 'mapping', construct: function (data) { return { type: 'NetProbeUi', ...data } } }),
    new yaml.Type('!type:OpenUiActionEvent', { kind: 'mapping', construct: function (data) { return { type: 'OpenUiActionEvent', ...data } } }),
    new yaml.Type('!type:SpillBehavior', { kind: 'mapping', construct: function (data) { return { type: 'SpillBehavior', ...data } } }),
    new yaml.Type('!type:TriggerBehavior', { kind: 'mapping', construct: function (data) { return { type: 'TriggerBehavior', ...data } } }),
    new yaml.Type('!type:RandomizeBehaviour', { kind: 'mapping', construct: function (data) { return { type: 'RandomizeBehaviour', ...data } } }),
    new yaml.Type('!type:ColorCycleBehaviour', { kind: 'mapping', construct: function (data) { return { type: 'ColorCycleBehaviour', ...data } } }),
    new yaml.Type('!type:ToggleJetpackEvent', { kind: 'mapping', construct: function (data) { return { type: 'ToggleJetpackEvent', ...data } } }),
    new yaml.Type('!type:EmptyAllContainersBehaviour', { kind: 'mapping', construct: function (data) { return { type: 'EmptyAllContainersBehaviour', ...data } } }),
    new yaml.Type('!type:CableTerminalNode', { kind: 'mapping', construct: function (data) { return { type: 'CableTerminalNode', ...data } } }),
    new yaml.Type('!type:CableNode', { kind: 'mapping', construct: function (data) { return { type: 'CableNode', ...data } } }),
    new yaml.Type('!type:CableTerminalPortNode', { kind: 'mapping', construct: function (data) { return { type: 'CableTerminalPortNode', ...data } } }),
    new yaml.Type('!type:EjectVendorItems', { kind: 'mapping', construct: function (data) { return { type: 'EjectVendorItems', ...data } } }),
    new yaml.Type('!type:ExtinguishReaction', { kind: 'mapping', construct: function (data) { return { type: 'ExtinguishReaction', ...data } } }),
    new yaml.Type('!type:ExtinguishTileReaction', { kind: 'mapping', construct: function (data) { return { type: 'ExtinguishTileReaction', ...data } } }),
    new yaml.Type('!type:SpillIfPuddlePresentTileReaction', { kind: 'mapping', construct: function (data) { return { type: 'SpillIfPuddlePresentTileReaction', ...data } } }),
    new yaml.Type('!type:SetStackCount', { kind: 'mapping', construct: function (data) { return { type: 'SetStackCount', ...data } } }),
    new yaml.Type('!type:DepartmentTimeRequirement', { kind: 'mapping', construct: function (data) { return { type: 'DepartmentTimeRequirement', ...data } } }),
    new yaml.Type('!type:AddComponentSpecial', { kind: 'mapping', construct: function (data) { return { type: 'AddComponentSpecial', ...data } } }),
    new yaml.Type('!type:GiveItemOnHolidaySpecial', { kind: 'mapping', construct: function (data) { return { type: 'GiveItemOnHolidaySpecial', ...data } } }),
    new yaml.Type('!type:AddImplantSpecial', { kind: 'mapping', construct: function (data) { return { type: 'AddImplantSpecial', ...data } } }),
    new yaml.Type('!type:RoleTimeRequirement', { kind: 'mapping', construct: function (data) { return { type: 'RoleTimeRequirement', ...data } } }),
    new yaml.Type('!type:OverallPlaytimeRequirement', { kind: 'mapping', construct: function (data) { return { type: 'OverallPlaytimeRequirement', ...data } } }),
    new yaml.Type('!type:TabletopBackgammonSetup', { kind: 'mapping', construct: function (data) { return { type: 'TabletopBackgammonSetup', ...data } } }),
    new yaml.Type('!type:TabletopCheckerSetup', { kind: 'mapping', construct: function (data) { return { type: 'TabletopCheckerSetup', ...data } } }),
    new yaml.Type('!type:TabletopChessSetup', { kind: 'mapping', construct: function (data) { return { type: 'TabletopChessSetup', ...data } } }),
    new yaml.Type('!type:TabletopParchisSetup', { kind: 'mapping', construct: function (data) { return { type: 'TabletopParchisSetup', ...data } } }),
    new yaml.Type('!type:MechGrabberUi', { kind: 'mapping', construct: function (data) { return { type: 'MechGrabberUi', ...data } } }),
    new yaml.Type('!type:DumpRestockInventory', { kind: 'mapping', construct: function (data) { return { type: 'DumpRestockInventory', ...data } } }),
    new yaml.Type('!type:PipeNode', { kind: 'mapping', construct: function (data) { return { type: 'PipeNode', ...data } } }),
    new yaml.Type('!type:PortPipeNode', { kind: 'mapping', construct: function (data) { return { type: 'PortPipeNode', ...data } } }),
    new yaml.Type('!type:PortablePipeNode', { kind: 'mapping', construct: function (data) { return { type: 'PortablePipeNode', ...data } } }),
    new yaml.Type('!type:AdjacentNode', { kind: 'mapping', construct: function (data) { return { type: 'AdjacentNode', ...data } } }),
    new yaml.Type('!type:DumpCanisterBehavior', { kind: 'mapping', construct: function (data) { return { type: 'DumpCanisterBehavior', ...data } } }),
    new yaml.Type('!type:SolutionExplosionBehavior', { kind: 'mapping', construct: function (data) { return { type: 'SolutionExplosionBehavior', ...data } } }),
    new yaml.Type('!type:SpawnPrototype', { kind: 'mapping', construct: function (data) { return { type: 'SpawnPrototype', ...data } } }),
    new yaml.Type('!type:DeleteEntity', { kind: 'mapping', construct: function (data) { return { type: 'DeleteEntity', ...data } } }),
    new yaml.Type('!type:SetAnchor', { kind: 'mapping', construct: function (data) { return { type: 'SetAnchor', ...data } } }),
    new yaml.Type('!type:EmptyAllContainers', { kind: 'mapping', construct: function (data) { return { type: 'EmptyAllContainers', ...data } } }),
    new yaml.Type('!type:EntityAnchored', { kind: 'mapping', construct: function (data) { return { type: 'EntityAnchored', ...data } } }),
    new yaml.Type('!type:MachineFrameRegenerateProgress', { kind: 'mapping', construct: function (data) { return { type: 'MachineFrameRegenerateProgress', ...data } } }),
    new yaml.Type('!type:MachineFrameComplete', { kind: 'mapping', construct: function (data) { return { type: 'MachineFrameComplete', ...data } } }),
    new yaml.Type('!type:BuildMachine', { kind: 'mapping', construct: function (data) { return { type: 'BuildMachine', ...data } } }),
    new yaml.Type('!type:ContainerNotEmpty', { kind: 'mapping', construct: function (data) { return { type: 'ContainerNotEmpty', ...data } } }),
    new yaml.Type('!type:ContainerEmpty', { kind: 'mapping', construct: function (data) { return { type: 'ContainerEmpty', ...data } } }),
    new yaml.Type('!type:AddContainer', { kind: 'mapping', construct: function (data) { return { type: 'AddContainer', ...data } } }),
    new yaml.Type('!type:MachineDeconstructedEvent', { kind: 'mapping', construct: function (data) { return { type: 'MachineDeconstructedEvent', ...data } } }),
    new yaml.Type('!type:RaiseEvent', { kind: 'mapping', construct: function (data) { return { type: 'RaiseEvent', ...data } } }),
    new yaml.Type('!type:WirePanel', { kind: 'mapping', construct: function (data) { return { type: 'WirePanel', ...data } } }),
    new yaml.Type('!type:SpriteStateChange', { kind: 'mapping', construct: function (data) { return { type: 'SpriteStateChange', ...data } } }),
    new yaml.Type('!type:BuildComputer', { kind: 'mapping', construct: function (data) { return { type: 'BuildComputer', ...data } } }),
    new yaml.Type('!type:PopupEveryone', { kind: 'mapping', construct: function (data) { return { type: 'PopupEveryone', ...data } } }),
    new yaml.Type('!type:AllConditions', { kind: 'mapping', construct: function (data) { return { type: 'AllConditions', ...data } } }),
    new yaml.Type('!type:SpawnPrototypeAtContainer', { kind: 'mapping', construct: function (data) { return { type: 'SpawnPrototypeAtContainer', ...data } } }),
    new yaml.Type('!type:ConditionalAction', { kind: 'mapping', construct: function (data) { return { type: 'ConditionalAction', ...data } } }),
    new yaml.Type('!type:AnyConditions', { kind: 'mapping', construct: function (data) { return { type: 'AnyConditions', ...data } } }),
    new yaml.Type('!type:DeleteEntitiesInContainer', { kind: 'mapping', construct: function (data) { return { type: 'DeleteEntitiesInContainer', ...data } } }),
    new yaml.Type('!type:SnapToGrid', { kind: 'mapping', construct: function (data) { return { type: 'SnapToGrid', ...data } } }),
    new yaml.Type('!type:DestroyEntity', { kind: 'mapping', construct: function (data) { return { type: 'DestroyEntity', ...data } } }),
    new yaml.Type('!type:ToiletLidClosed', { kind: 'mapping', construct: function (data) { return { type: 'ToiletLidClosed', ...data } } }),
    new yaml.Type('!type:VisualizerDataInt', { kind: 'mapping', construct: function (data) { return { type: 'VisualizerDataInt', ...data } } }),
    new yaml.Type('!type:BuildMech', { kind: 'mapping', construct: function (data) { return { type: 'BuildMech', ...data } } }),
    new yaml.Type('!type:PlaySound', { kind: 'mapping', construct: function (data) { return { type: 'PlaySound', ...data } } }),
    new yaml.Type('!type:EmptyContainer', { kind: 'mapping', construct: function (data) { return { type: 'EmptyContainer', ...data } } }),
    new yaml.Type('!type:AdminLog', { kind: 'mapping', construct: function (data) { return { type: 'AdminLog', ...data } } }),
    new yaml.Type('!type:GivePrototype', { kind: 'mapping', construct: function (data) { return { type: 'GivePrototype', ...data } } }),
    new yaml.Type('!type:AllWiresCut', { kind: 'mapping', construct: function (data) { return { type: 'AllWiresCut', ...data } } }),
    new yaml.Type('!type:ApcPanel', { kind: 'mapping', construct: function (data) { return { type: 'ApcPanel', ...data } } }),
    new yaml.Type('!type:SpriteChange', { kind: 'mapping', construct: function (data) { return { type: 'SpriteChange', ...data } } }),
    new yaml.Type('!type:DoorWelded', { kind: 'mapping', construct: function (data) { return { type: 'DoorWelded', ...data } } }),
    new yaml.Type('!type:AirlockBolted', { kind: 'mapping', construct: function (data) { return { type: 'AirlockBolted', ...data } } }),
    new yaml.Type('!type:StorageWelded', { kind: 'mapping', construct: function (data) { return { type: 'StorageWelded', ...data } } }),
    new yaml.Type('!type:Locked', { kind: 'mapping', construct: function (data) { return { type: 'Locked', ...data } } })
])

const readTextFile = (path) => { return fs.readFileSync(path, 'utf8') }
const readYAML = (path, schema = schemaa) => { return yaml.load(readTextFile(path), { schema }) }

module.exports = {readAllFiles,readYAML,readTextFile}